openapi: 3.0.0
info:
  title: Lets Code IMDB Card Game Challenge
  description: |-
    Lets Code IMDB Card Game Challenge is a game that will give two movie options
    to choose which one has the higher score, that is the movie IMDB rating multiplied by the votes count.
  version: 1.0.0
paths:
  /game/start:
    post:
      description: Starts a new active Game. Should only be used when the player has not an active game session.
      tags:
        - Game
      parameters:
        - $ref: '#/components/parameters/apiKeyHeader'
      responses:
        '203':
          description: Created new game and return the first round of the game with the movies to choose
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentGameResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Non authorized use of api, verify your API_KEY header.
  /game/stop:
    post:
      description: Finishes the current Game. Should only used when the player has an active game session.
      tags:
        - Game
      parameters:
        - $ref: '#/components/parameters/apiKeyHeader'
      responses:
        '204':
          description: Game finished with success
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Non authorized use of api, verify your API_KEY header.
  /game/current:
    get:
      description: Get the current active game.
      tags:
        - Game
      parameters:
        - $ref: '#/components/parameters/apiKeyHeader'
      responses:
        '200':
          description: the current active game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentGameResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Non authorized use of api, verify your API_KEY header.
  /game/choose:
    post:
      description: Make a choice beetwen the two movies which one has the higher score
      tags:
        - Game
      parameters:
        - $ref: '#/components/parameters/apiKeyHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameChooseRequest'
      responses:
        '200':
          description:  Return if the the choice was right or not.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameChooseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Non authorized use of api, verify your API_KEY header.
  /player/leaderboard:
    get:
      description: Show the current players leaderboard order by the higher player score decrescent
      tags:
        - Player
      responses:
        '200':
          description: The player leaderboard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerLeaderboard'

components:
  parameters:
    apiKeyHeader:
      name: API-KEY
      description: An Player unique key used to authenticate on the game apis.
      in: header
      schema:
        type: string
        example: "dab41a9e-8d8d-4299-8f62-3e3566b28f04"
      required: true
  schemas:
    Movie:
      type: object
      description:  One option of movies to guess which one has the higher score (rating multiplied by votes) on IMDB.
      properties:
        title:
          type: string
          example: Some Nice Movie
          maxLength: 500
        imdb_id:
          type: string
          example: tt0000001
          maxLength: 50
        genres:
          type: string
          example: Musical,Action
          maxLength: 200
        year:
          type: integer
          example: 2009
      required:
        - title
        - imdb_id
    Round:
      type: object
      description: a game round with two movie option to choose which one has the higher score
      properties:
        round_number:
          type: integer
          description: the number of the current active round
          example: 0
        firstMovieOption:
          $ref: '#/components/schemas/Movie'
        secondMovieOption:
          $ref: '#/components/schemas/Movie'
      required:
        - round_number
        - firstMovieOption
        - secondMovieOption
    CurrentGameResponse:
      type: object
      properties:
        round:
          $ref: '#/components/schemas/Round'
        failures_count:
          type: integer
          example: 0
          description: The current session amount of failures, on the third failure the current game will be ended.
      required:
        - round
        - failures_count
    Choice:
      type: string
      description: Enum that represents the choice of the player of the movie with the higher score.
      enum:
        - FIRST
        - SECOND
    GameChooseRequest:
      type: object
      properties:
        choice:
          $ref: '#/components/schemas/Choice'
        round_number:
          type: integer
          description: The current round number that the player is submitting the answer
      required:
        - choice
        - round_number
    Rating:
      type: object
      properties:
        score:
          type: number
          description: The score is composed by the IMDB rating multiplied by the number of votes.
          example: 8738.1
        rating:
          type: number
          maximum: 10.0
          description: The IMDB rating for the movie from 0 to 10.
          example: 6.3
        num_votes:
          type: integer
          description: The number of votes that the movie have.
          example: 1387
    MovieWithRating:
      description: repeat the movie option of the round but including the rating and score for this movie
      allOf:
        - $ref: '#/components/schemas/Movie'
        - $ref: '#/components/schemas/Rating'
    RoundResult:
      type: object
      properties:
        round_number:
          type: integer
          description: the current round number of this choice
          example: 1
        firstMovieOption:
          $ref: '#/components/schemas/MovieWithRating'
        secondMovieOption:
          $ref: '#/components/schemas/MovieWithRating'
        correctAnswer:
          allOf:
            - $ref: '#/components/schemas/Choice'
          description: The correct answer for this round
      required:
        - round_number
        - firstMovieOption
        - secondMovieOption
        - correctAnswer
    GameChooseResponse:
      type: object
      properties:
        wasRight:
          type: boolean
          description: indicates if the player choose the movie correctly
          example: false
        failures_count:
          type: integer
          description: the current failures count after this choice
          example: 2
        finished:
          type: boolean
          description: indicates if the game is finished, could be because the third failure on the current game or calling /game/stop.
        round_result:
          $ref: '#/components/schemas/RoundResult'
        next_round:
          allOf:
            - $ref: '#/components/schemas/Round'
          description: The next round with the new movies to choose, it will not be present if the game had finished.
      required:
        - wasRight
        - failures_count
        - round_result
    Player:
      type: object
      properties:
        nickname:
          type: string
          description: the player nickname
          maxLength: 100
          example: Green Mario
        score:
          type: integer
          description: the player scores
          example: 999
    PlayerLeaderboard:
      type: array
      items:
        $ref: "#/components/schemas/Player"
    BadRequestResponse:
      type: object
      description: "Response for invalid use of API"
      properties:
        timestamp:
          type: string
          description: Error timestamp
          example:  "2022-06-06T01:40:37.937+00:00"
        status:
          type: integer
          description: Http status code
          example: 400
        message:
          type: string
          description: "error description"
          example: "Player not found"
        fields:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              field_error:
                type: string
              rejected_value:
                type: string
        path:
          type: string
          description: endpoint that returned error
          example: "/game/start/"